package goog.editor;
import js.Dom;
private typedef Object = Dynamic;
private typedef Node = Dom;
private typedef Element = HtmlDom;
private typedef HTMLIFrameElement = IFrame;
private typedef Selection = Dynamic;
private typedef Range = Dynamic;
private typedef HTMLElement = Element;
extern class Field extends goog.events.EventTarget {
static function __init__(): Void {
        untyped __js__("goog.require('goog.editor.Field')");
      }
public function new( id:String,?opt_doc:Dynamic):Void;
static public function setActiveFieldId( fieldId:String):Void;
static public function getActiveFieldId():String;
 public function inModalMode():Bool;
 public function setModalMode( inModalMode:Bool):Void;
 public function getHashCode():String;
 public function getElement():Dynamic;
 public function getOriginalElement():Dynamic;
 public function addListener( type:Array<String>,listener:Dynamic,?opt_capture:Bool,?opt_handler:Dynamic):Void;
 public function getPluginByClassId( classId:String):Dynamic;
 public function registerPlugin( plugin:Dynamic):Void;
 public function unregisterPlugin( plugin:Dynamic):Void;
 public function setInitialStyle( cssText:String):Void;
 public function resetOriginalElemProperties():Void;
 public function isModified( ?opt_useIsEverModified:Bool):Bool;
 public function setAppWindow( appWindow:Dynamic):Void;
 public function getAppWindow():Dynamic;
 public function setBaseZindex( zindex:Float):Void;
 public function getBaseZindex():Float;
 public function setupFieldObject( field:Dynamic):Void;
 public function attachWrapper( wrapper:Dynamic):Void;
 public function removeAllWrappers():Void;
 public function setupMutationEventHandlersGecko():Void;
 public function injectContents( contents:String,field:Dynamic):Void;
 public function getInjectableContents( contents:String,styles:Dynamic):String;
 public function execCommand( command:String,var_args:Dynamic):Dynamic;
 public function queryCommandValue( commands:Array<String>):Dynamic;
 public function handleDomAttrChange( handler:Dynamic,e:Dynamic):Void;
 public function getEditableIframe():Dynamic;
 public function getEditableDomHelper():Dynamic;
 public function getRange():Dynamic;
 public function dispatchSelectionChangeEvent( ?opt_e:Dynamic):Void;
 public function dispatchBeforeChange():Void;
 public function stopChangeEvents( ?opt_stopChange:Bool,?opt_stopDelayedChange:Bool):Void;
 public function startChangeEvents( ?opt_fireChange:Bool,?opt_fireDelayedChange:Bool):Void;
 public function stopEvent( eventType:Dynamic):Void;
 public function startEvent( eventType:Dynamic):Void;
 public function debounceEvent( eventType:Dynamic):Void;
 public function isEventStopped( eventType:Dynamic):Bool;
 public function manipulateDom( func:Dynamic->Dynamic,?opt_preventDelayedChange:Bool,?opt_handler:Dynamic):Void;
 public function dispatchCommandValueChange( ?opt_commands:Array<String>):Void;
 public function dispatchChange( ?opt_noDelay:Bool):Void;
 public function handleChange():Void;
 public function clearDelayedChange():Void;
 public function dispatchBlur():Void;
 public function isSelectionEditable():Bool;
 public function getCleanContents():String;
 public function getFieldCopy():Dynamic;
 public function setHtml( addParas:Bool,html:String,?opt_dontFireDelayedChange:Bool,?opt_applyLorem:Bool):Void;
 public function turnOnDesignModeGecko():Void;
 public function installStyles():Void;
 public function isUneditable():Bool;
 public function isLoaded():Bool;
 public function isLoading():Bool;
 public function focus():Void;
 public function focusAndPlaceCursorAtStart():Void;
 public function placeCursorAtStart():Void;
 public function makeEditable( ?opt_iframeSrc:String):Void;
 public function makeEditableInternal( ?opt_iframeSrc:String):Void;
 public function handleFieldLoad():Void;
 public function makeUneditable( ?opt_skipRestore:Bool):Void;
 public function restoreDom():Void;
 public function shouldLoadAsynchronously():Bool;
 public function attachIframe( iframe:Dynamic):Void;
 public function getFieldFormatInfo( extraStyles:Dynamic):Dynamic;
 public function writeIframeContent( iframe:Dynamic,innerHtml:String,extraStyles:Dynamic):Void;
 public function iframeFieldLoadHandler( iframe:Dynamic,innerHtml:String,styles:Dynamic):Void;
 public function getIframeAttributes():Dynamic;
}
