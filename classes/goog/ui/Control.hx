package goog.ui;
import js.Dom;
private typedef Object = Dynamic;
private typedef Node = Dom;
private typedef Element = HtmlDom;
private typedef HTMLIFrameElement = IFrame;
private typedef Selection = Dynamic;
private typedef Range = Dynamic;
private typedef HTMLElement = Element;
extern class Control extends goog.ui.Component {
static function __init__(): Void {
        untyped __js__("goog.require('goog.ui.Control')");
      }
public function new( content:Dynamic,?opt_renderer:Dynamic,?opt_domHelper:Dynamic):Void;
 public function isHandleMouseEvents():Bool;
 public function setHandleMouseEvents( enable:Bool):Void;
 public function getKeyEventTarget():Dynamic;
 public function getKeyHandler():Dynamic;
 public function getRenderer():Dynamic;
 public function setRenderer( renderer:Dynamic):Void;
 public function getExtraClassNames():Array<String>;
 public function addClassName( className:String):Void;
 public function removeClassName( className:String):Void;
 public function enableClassName( className:String,enable:Bool):Void;
 public function getContent():Dynamic;
 public function setContent( content:Dynamic):Void;
 public function setContentInternal( content:Dynamic):Void;
 public function getCaption():String;
 public function setCaption( caption:String):Void;
 public function isAllowTextSelection():Bool;
 public function setAllowTextSelection( allow:Bool):Void;
 public function isVisible():Bool;
 public function setVisible( visible:Bool,?opt_force:Bool):Bool;
 public function isEnabled():Bool;
 public function setEnabled( enable:Bool):Void;
 public function isHighlighted():Bool;
 public function setHighlighted( highlight:Bool):Void;
 public function isActive():Bool;
 public function setActive( active:Bool):Void;
 public function isSelected():Bool;
 public function setSelected( select:Bool):Void;
 public function isChecked():Bool;
 public function setChecked( check:Bool):Void;
 public function isFocused():Bool;
 public function setFocused( focused:Bool):Void;
 public function isOpen():Bool;
 public function setOpen( open:Bool):Void;
 public function getState():Float;
 public function hasState( state:Dynamic):Bool;
 public function setState( state:Dynamic,enable:Bool):Void;
 public function setStateInternal( state:Float):Void;
 public function isSupportedState( state:Dynamic):Bool;
 public function setSupportedState( state:Dynamic,support:Bool):Void;
 public function isAutoState( state:Dynamic):Bool;
 public function setAutoStates( states:Float,enable:Bool):Void;
 public function isDispatchTransitionEvents( state:Dynamic):Bool;
 public function setDispatchTransitionEvents( states:Float,enable:Bool):Void;
 public function isTransitionAllowed( state:Dynamic,enable:Bool):Bool;
 public function handleMouseOver( e:Dynamic):Void;
 public function handleMouseOut( e:Dynamic):Void;
 public function handleMouseDown( e:Dynamic):Void;
 public function handleMouseUp( e:Dynamic):Void;
 public function handleDblClick( e:Dynamic):Void;
 public function performActionInternal( e:Dynamic):Bool;
 public function handleFocus( e:Dynamic):Void;
 public function handleBlur( e:Dynamic):Void;
 public function handleKeyEvent( e:Dynamic):Bool;
 public function handleKeyEventInternal( e:Dynamic):Bool;
}
