package proto2;
import js.Dom;
private typedef Object = Dynamic;
private typedef Node = Dom;
private typedef Element = HtmlDom;
private typedef HTMLIFrameElement = IFrame;
private typedef Selection = Dynamic;
private typedef Range = Dynamic;
private typedef HTMLElement = Element;
extern class TestAllTypes extends goog.proto2.Message {
static function __init__(): Void {
        untyped __js__("goog.require('proto2.TestAllTypes')");
      }
public function new():Void;
 public function getOptionalInt32():Float;
 public function setOptionalInt32( value:Float):Void;
 public function hasOptionalInt32():Bool;
 public function optionalInt32Count():Float;
 public function clearOptionalInt32():Void;
 public function getOptionalInt64():Float;
 public function setOptionalInt64( value:Float):Void;
 public function hasOptionalInt64():Bool;
 public function optionalInt64Count():Float;
 public function clearOptionalInt64():Void;
 public function getOptionalUint32():Float;
 public function setOptionalUint32( value:Float):Void;
 public function hasOptionalUint32():Bool;
 public function optionalUint32Count():Float;
 public function clearOptionalUint32():Void;
 public function getOptionalUint64():Float;
 public function setOptionalUint64( value:Float):Void;
 public function hasOptionalUint64():Bool;
 public function optionalUint64Count():Float;
 public function clearOptionalUint64():Void;
 public function getOptionalSint32():Float;
 public function setOptionalSint32( value:Float):Void;
 public function hasOptionalSint32():Bool;
 public function optionalSint32Count():Float;
 public function clearOptionalSint32():Void;
 public function getOptionalSint64():Float;
 public function setOptionalSint64( value:Float):Void;
 public function hasOptionalSint64():Bool;
 public function optionalSint64Count():Float;
 public function clearOptionalSint64():Void;
 public function getOptionalFixed32():Float;
 public function setOptionalFixed32( value:Float):Void;
 public function hasOptionalFixed32():Bool;
 public function optionalFixed32Count():Float;
 public function clearOptionalFixed32():Void;
 public function getOptionalFixed64():Float;
 public function setOptionalFixed64( value:Float):Void;
 public function hasOptionalFixed64():Bool;
 public function optionalFixed64Count():Float;
 public function clearOptionalFixed64():Void;
 public function getOptionalSfixed32():Float;
 public function setOptionalSfixed32( value:Float):Void;
 public function hasOptionalSfixed32():Bool;
 public function optionalSfixed32Count():Float;
 public function clearOptionalSfixed32():Void;
 public function getOptionalSfixed64():Float;
 public function setOptionalSfixed64( value:Float):Void;
 public function hasOptionalSfixed64():Bool;
 public function optionalSfixed64Count():Float;
 public function clearOptionalSfixed64():Void;
 public function getOptionalFloat():Float;
 public function setOptionalFloat( value:Float):Void;
 public function hasOptionalFloat():Bool;
 public function optionalFloatCount():Float;
 public function clearOptionalFloat():Void;
 public function getOptionalDouble():Float;
 public function setOptionalDouble( value:Float):Void;
 public function hasOptionalDouble():Bool;
 public function optionalDoubleCount():Float;
 public function clearOptionalDouble():Void;
 public function getOptionalBool():Bool;
 public function setOptionalBool( value:Bool):Void;
 public function hasOptionalBool():Bool;
 public function optionalBoolCount():Float;
 public function clearOptionalBool():Void;
 public function getOptionalString():String;
 public function setOptionalString( value:String):Void;
 public function hasOptionalString():Bool;
 public function optionalStringCount():Float;
 public function clearOptionalString():Void;
 public function getOptionalBytes():String;
 public function setOptionalBytes( value:String):Void;
 public function hasOptionalBytes():Bool;
 public function optionalBytesCount():Float;
 public function clearOptionalBytes():Void;
 public function getOptionalgroup():Dynamic;
 public function setOptionalgroup( value:Dynamic):Void;
 public function hasOptionalgroup():Bool;
 public function optionalgroupCount():Float;
 public function clearOptionalgroup():Void;
 public function getOptionalNestedMessage():Dynamic;
 public function setOptionalNestedMessage( value:Dynamic):Void;
 public function hasOptionalNestedMessage():Bool;
 public function optionalNestedMessageCount():Float;
 public function clearOptionalNestedMessage():Void;
 public function getOptionalNestedEnum():Dynamic;
 public function setOptionalNestedEnum( value:Dynamic):Void;
 public function hasOptionalNestedEnum():Bool;
 public function optionalNestedEnumCount():Float;
 public function clearOptionalNestedEnum():Void;
 public function getRepeatedInt32( index:Float):Float;
 public function addRepeatedInt32( value:Float):Void;
 public function repeatedInt32Array():Array<Float>;
 public function hasRepeatedInt32():Bool;
 public function repeatedInt32Count():Float;
 public function clearRepeatedInt32():Void;
 public function getRepeatedInt64( index:Float):Float;
 public function addRepeatedInt64( value:Float):Void;
 public function repeatedInt64Array():Array<Float>;
 public function hasRepeatedInt64():Bool;
 public function repeatedInt64Count():Float;
 public function clearRepeatedInt64():Void;
 public function getRepeatedUint32( index:Float):Float;
 public function addRepeatedUint32( value:Float):Void;
 public function repeatedUint32Array():Array<Float>;
 public function hasRepeatedUint32():Bool;
 public function repeatedUint32Count():Float;
 public function clearRepeatedUint32():Void;
 public function getRepeatedUint64( index:Float):Float;
 public function addRepeatedUint64( value:Float):Void;
 public function repeatedUint64Array():Array<Float>;
 public function hasRepeatedUint64():Bool;
 public function repeatedUint64Count():Float;
 public function clearRepeatedUint64():Void;
 public function getRepeatedSint32( index:Float):Float;
 public function addRepeatedSint32( value:Float):Void;
 public function repeatedSint32Array():Array<Float>;
 public function hasRepeatedSint32():Bool;
 public function repeatedSint32Count():Float;
 public function clearRepeatedSint32():Void;
 public function getRepeatedSint64( index:Float):Float;
 public function addRepeatedSint64( value:Float):Void;
 public function repeatedSint64Array():Array<Float>;
 public function hasRepeatedSint64():Bool;
 public function repeatedSint64Count():Float;
 public function clearRepeatedSint64():Void;
 public function getRepeatedFixed32( index:Float):Float;
 public function addRepeatedFixed32( value:Float):Void;
 public function repeatedFixed32Array():Array<Float>;
 public function hasRepeatedFixed32():Bool;
 public function repeatedFixed32Count():Float;
 public function clearRepeatedFixed32():Void;
 public function getRepeatedFixed64( index:Float):Float;
 public function addRepeatedFixed64( value:Float):Void;
 public function repeatedFixed64Array():Array<Float>;
 public function hasRepeatedFixed64():Bool;
 public function repeatedFixed64Count():Float;
 public function clearRepeatedFixed64():Void;
 public function getRepeatedSfixed32( index:Float):Float;
 public function addRepeatedSfixed32( value:Float):Void;
 public function repeatedSfixed32Array():Array<Float>;
 public function hasRepeatedSfixed32():Bool;
 public function repeatedSfixed32Count():Float;
 public function clearRepeatedSfixed32():Void;
 public function getRepeatedSfixed64( index:Float):Float;
 public function addRepeatedSfixed64( value:Float):Void;
 public function repeatedSfixed64Array():Array<Float>;
 public function hasRepeatedSfixed64():Bool;
 public function repeatedSfixed64Count():Float;
 public function clearRepeatedSfixed64():Void;
 public function getRepeatedFloat( index:Float):Float;
 public function addRepeatedFloat( value:Float):Void;
 public function repeatedFloatArray():Array<Float>;
 public function hasRepeatedFloat():Bool;
 public function repeatedFloatCount():Float;
 public function clearRepeatedFloat():Void;
 public function getRepeatedDouble( index:Float):Float;
 public function addRepeatedDouble( value:Float):Void;
 public function repeatedDoubleArray():Array<Float>;
 public function hasRepeatedDouble():Bool;
 public function repeatedDoubleCount():Float;
 public function clearRepeatedDouble():Void;
 public function getRepeatedBool( index:Float):Bool;
 public function addRepeatedBool( value:Bool):Void;
 public function repeatedBoolArray():Array<Bool>;
 public function hasRepeatedBool():Bool;
 public function repeatedBoolCount():Float;
 public function clearRepeatedBool():Void;
 public function getRepeatedString( index:Float):String;
 public function addRepeatedString( value:String):Void;
 public function repeatedStringArray():Array<String>;
 public function hasRepeatedString():Bool;
 public function repeatedStringCount():Float;
 public function clearRepeatedString():Void;
 public function getRepeatedBytes( index:Float):String;
 public function addRepeatedBytes( value:String):Void;
 public function repeatedBytesArray():Array<String>;
 public function hasRepeatedBytes():Bool;
 public function repeatedBytesCount():Float;
 public function clearRepeatedBytes():Void;
 public function getRepeatedgroup( index:Float):Dynamic;
 public function addRepeatedgroup( value:Dynamic):Void;
 public function repeatedgroupArray():Dynamic;
 public function hasRepeatedgroup():Bool;
 public function repeatedgroupCount():Float;
 public function clearRepeatedgroup():Void;
 public function getRepeatedNestedMessage( index:Float):Dynamic;
 public function addRepeatedNestedMessage( value:Dynamic):Void;
 public function repeatedNestedMessageArray():Dynamic;
 public function hasRepeatedNestedMessage():Bool;
 public function repeatedNestedMessageCount():Float;
 public function clearRepeatedNestedMessage():Void;
 public function getRepeatedNestedEnum( index:Float):Dynamic;
 public function addRepeatedNestedEnum( value:Dynamic):Void;
 public function repeatedNestedEnumArray():Dynamic;
 public function hasRepeatedNestedEnum():Bool;
 public function repeatedNestedEnumCount():Float;
 public function clearRepeatedNestedEnum():Void;
}
